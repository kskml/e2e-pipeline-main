name: CI Pipeline with API Invocation

on:
  pull_request:
    branches:
      - main
      - hotfix/**
      - feature/**

jobs:
  process:
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Print Message and Delay
        run: |
          echo "Step 1 executed"
          sleep 15

      - name: Step 2 - Print Message and Delay
        run: |
          echo "Step 2 executed"
          sleep 15

      - name: Step 3 - Retrieve PR Number and Invoke API
        env:
          COMMIT_ID: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Step 3 executed"
          
          # Check for failed check runs
          CHECK_RUNS=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT_ID/check-runs")
          
          # Extract conclusions and check for any failures
          HAS_FAILURE=$(echo "$CHECK_RUNS" | jq -r '.check_runs[] | select(.conclusion == "failure") | .conclusion' | wc -l)
          
          if [ "$HAS_FAILURE" -gt 0 ]; then
            echo "Error: Found failed check runs. Skipping API invocation."
            exit 1
          fi
          
          echo "No failed check runs found. Proceeding with API invocation."
          
          # Query GitHub API to find PR associated with the commit
          PR_NUMBER=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT_ID/pulls" | \
            jq -r '.[0].number // "none"')
          echo "PR Number: $PR_NUMBER"
          
          # Invoke API with PR number and commit ID
          RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
            -X POST \
            -H "Content-Type: application/json" \
            -d "{\"pr_number\": \"$PR_NUMBER\", \"commit_id\": \"$COMMIT_ID\"}" \
            "https://wicked-wolves-behave.loca.lt/webhook/telemetry")
          
          if [ "$RESPONSE_CODE" -eq 200 ]; then
            echo "API call successful with status code $RESPONSE_CODE"
          else
            echo "API call failed with status code $RESPONSE_CODE"
            exit 1
          fi
